package main

import (
	"fmt"
	"math/big"
	"time"
)
var Base string = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@#"
func getString(b,n int64) string {
	if n < b {
		return string(Base[n])
	} else {
		return getString(b,n/b) + string(Base[n%b])
	}
}
func concat(b int64,x *big.Int,n int64) *big.Int {
	if n == 0 {
		return x
	} else if n < b {
		v := big.NewInt(b)
		return v.Add(v.Mul(x,v),big.NewInt(n))
	} else {
		v := concat(b,x,n/b)
		return v.Add(v.Mul(v,big.NewInt(b)),big.NewInt(n%b))
	}
}
func getBase(b,n int64) *big.Int {
	if n == 0 {
		return big.NewInt(0)
	} else if n < b {
		k := getBase(b,n-1)
		return concat(b,k,n)
	} else {
		k := getBase(b,n-1)
		return concat(b,k,n)
	}}
func getHex(n int) string {
	if n == 0 {
		return ""
	}
	return getHex(n-1) + fmt.Sprintf("%x", n)
}
func getBits(n int) string {
	if n == 0 {
		return ""
	}
	return getBits(n-1) + fmt.Sprintf("%b",n)
}
func main() {
	x := getBase(4,275)
	c := 0
	fmt.Println(x)
	start := time.Now().UnixMicro()
	for k := 65; k < 257; k++ {
	for i := 1; i < 1000; i++ {
		x = getBase(int64(k),int64(i))
		test := time.Now().UnixMicro()
		if x.ProbablyPrime(1000) {
			fmt.Printf("(%v,%v)/(%v,%v) ", k, i, x.BitLen(), (time.Now().UnixMicro() - test))
			c++
		}
	}
	}
	fmt.Println(c,(time.Now().UnixMicro() - start))
}
/*
(base,n)/(bits,microsecs)
(2,15)/(49,1533) (3,2)/(3,0) (3,5)/(12,0) (3,82)/(466,60276) (5,2)/(3,0) (5,113)/(721,204051) (5,162)/(1150,509531) (6,11)/(42,0) (6,43)/(229,20534) (6,173)/(1237,743255) (7,10)/(37,0) (7,37)/(189,10016) (8,3)/(7,0) (9,2)/(4,0) (9,14)/(61,0) (11,2)/(4,0) (12,5)/(15,0) (12,17)/(80,3516) (12,59)/(381,48122) (12,205)/(1650,1370256) (14,3)/(8,0) (15,2)/(5,0) (16,13)/(49,0) (16,211)/(1625,1372847) (17,2)/(5,0) (17,22)/(111,10019) (17,29)/(168,10017) (17,46)/(307,30123) (20,3)/(9,0) (20,7)/(27,0) (21,2)/(5,0) (23,9)/(37,0) (23,258)/(2231,3184375) (24,7)/(28,0) (24,41)/(267,33598) (27,2)/(5,0) (27,5)/(20,0) (29,2)/(5,0) (29,22)/(103,7051) (30,7)/(30,0) (30,11)/(50,1506) (30,169)/(1512,1075645) (30,263)/(2434,4571961) (32,3)/(11,0) (32,79)/(631,120337) (33,5)/(21,0) (34,25)/(123,0) (35,2)/(6,0) (36,323)/(3154,8489171) (37,226)/(2163,2859809) (38,3)/(11,0) (39,2)/(6,0) (39,62)/(450,61208) (39,941)/(9742,210787781) (41,2)/(6,0) (41,33)/(172,9011) (41,201)/(1935,2469791) (42,5)/(22,0) (42,65)/(475,70242) (44,3)/(11,0) (44,751)/(7960,119460006) (45,2)/(6,0) (46,31)/(166,14098) (47,85)/(684,160964) (48,7)/(34,0) (51,2)/(6,0) (51,13)/(69,5004) (53,14)/(75,10038) (53,58)/(361,50330) (54,5)/(24,0) (56,3)/(12,0) (56,31)/(175,11010) (57,2)/(6,0) (59,2)/(6,0) (59,101)/(842,314399) (59,309)/(3289,9614672) (62,15)/(84,10020) (63,10)/(54,0) (63,206)/(2087,2593120) 
79 total
833817453 microsecs total
(65,2)/(7,508) (65,69)/(440,70498) (66,71)/(460,65663) (68,7)/(37,1001) (69,2)/(7,0) (69,53)/(318,33030) (70,109)/(908,385889) (71,2)/(7,0) (71,177)/(1741,1764647) (71,621)/(7202,87213592) (72,5)/(25,1001) (72,341)/(3764,13625503) (73,862)/(10220,242090791) (74,193)/(1938,2490404) (77,2)/(7,0) (77,45)/(276,31030) (77,89)/(633,117117) (80,3)/(13,0) (80,43)/(266,37210) (81,2)/(7,0) (83,9)/(52,0) (83,149)/(1371,983481) (87,2)/(7,0) (89,13)/(78,4508) (89,46)/(292,32537) (90,23)/(143,10012) (93,5)/(27,2001) (94,13)/(79,6006) (95,2)/(7,0) (95,49)/(316,31595) (95,58)/(375,47513) (95,74)/(480,66018) (95,97)/(651,159271) (95,117)/(914,387005) (98,3)/(14,0) (99,2)/(7,1001) (99,17)/(107,5006) (100,139)/(1183,598526) (101,2)/(7,0) (101,666)/(8197,129522740) (102,11)/(67,5007) (102,125)/(988,358759) (104,3)/(14,1002) (104,25)/(161,11012) (104,31)/(202,19018) (104,109)/(764,203288) (104,151)/(1327,830228) (105,2)/(7,0) (105,58)/(383,48044) (107,2)/(7,0) (108,37)/(244,19017) (108,583)/(7147,85400524) (110,3)/(14,0) (110,7)/(41,2002) (110,13)/(82,6006) (111,2)/(7,0) (113,86)/(580,120109) (113,117)/(826,255750) (114,5)/(28,1001) (116,3)/(14,0) (122,3)/(14,1001) (122,9)/(56,2001) (122,163)/(1414,1115987) (123,161)/(1382,968011) (125,2)/(7,0) (125,9)/(56,0) (126,17)/(112,5005) (127,58)/(399,73437) (128,7)/(43,0) 
(129,2)/(8,0) (129,37)/(253,19016) (130,253)/(2641,5262700) (135,2)/(8,0) (135,17)/(114,6007) (136,43)/(298,32029) (137,2)/(8,0) (138,17)/(114,5006) (138,31)/(214,20020) (138,143)/(1053,425957) (139,85)/(599,118699) (140,13)/(86,5005) (140,33)/(229,20021) (140,123)/(870,314656) (143,34)/(237,20523) (144,35)/(244,19018) (145,133)/(948,388990) (146,3)/(15,0) (146,37)/(259,26023) (147,2)/(8,0) (148,31)/(217,9503) (149,2)/(8,0) (150,13)/(87,6006) (151,13)/(87,3003) (153,5)/(30,1001) (153,10)/(66,5005) (153,29)/(204,20018) (155,2)/(8,0) (157,10)/(66,5004) (159,25)/(176,11010) (159,470)/(5712,45200611) (161,2)/(8,0) (161,13)/(88,6007) (161,38)/(272,31029) (162,5)/(30,1001) (164,7)/(45,1001) (165,2)/(8,0) (165,314)/(3411,11038831) (167,174)/(1337,847929) (168,5)/(30,1002) (168,65)/(474,68571) (169,22)/(156,10011) (169,85)/(622,118109) (170,3)/(15,0) (170,9)/(60,2002) (171,2)/(8,0) (173,566)/(7130,84603462) (173,986)/(13375,534917143) (174,215)/(1906,2226140) (174,793)/(10510,271417796) (175,166)/(1230,704248) (176,67)/(493,74552) (177,2)/(8,0) (179,2)/(8,0) (179,554)/(6953,81464032) (180,7)/(45,1542) (180,89)/(660,160206) (180,131)/(974,359809) (182,51)/(376,48043) (183,17)/(121,6005) (186,13)/(91,10043) (186,281)/(2835,6550407) (189,2)/(8,0) (189,925)/(12561,456692321) (191,2)/(8,0) (191,13)/(91,5005) (192,11)/(76,6006) (194,7)/(46,1000) (194,21)/(153,10010) (194,31)/(229,20018) (195,2)/(8,0) (195,262)/(2503,4375718) (196,37)/(275,31714) (197,2)/(8,0) (197,25)/(183,11010) (197,533)/(6624,69276630) (198,17)/(123,6005) (200,7)/(46,0) (201,601)/(7659,104280654) (203,26)/(192,12027) (203,45)/(338,48128) (205,406)/(4662,24648435) (207,5)/(31,0) (207,934)/(12779,471123839) (208,7)/(47,0) (209,2)/(8,0) (209,74)/(563,86229) (209,622)/(7978,121662039) (210,277)/(2654,5244486) (214,397)/(4491,24261279) (215,13)/(93,6006) (216,11)/(78,10043) (216,227)/(1846,1984644) (218,3)/(16,0) (218,9)/(63,0) (219,5)/(32,0) (219,13)/(94,10016) (220,7)/(47,1001) (220,13)/(94,5005) (221,2)/(8,1000) (221,166)/(1286,832504) (223,25)/(188,6003) (224,3)/(16,0) (225,2)/(8,0) (227,2)/(8,0) (227,14)/(102,7503) (227,890)/(12155,415181140) (228,5)/(32,1001) (229,13)/(95,10082) (231,2)/(8,0) (234,5)/(32,1001) (234,7)/(48,2001) (234,17)/(126,5005) (234,23)/(174,11011) (236,3)/(16,0) (237,2)/(8,0) (237,10)/(72,5198) (237,25)/(190,6002) (237,74)/(576,107708) (239,2)/(8,0) (239,249)/(2047,2386167) (240,23)/(174,10045) (240,43)/(333,40245) (242,3)/(16,0) (242,81)/(634,111851) (245,117)/(921,384349) (247,838)/(11359,333576758) (247,922)/(12694,475484887) (248,3)/(16,1012) (249,2)/(8,1001) (251,26)/(200,19016) (252,25)/(192,12011) (252,55)/(431,70065) (253,25)/(192,11010) (254,3)/(16,1001) (255,2)/(9,0) 
205 total
6791909443 microsecs total
*/
